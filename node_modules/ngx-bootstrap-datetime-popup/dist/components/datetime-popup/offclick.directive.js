import { Directive, ElementRef, EventEmitter, Output } from '@angular/core';
var OffClickDirective = /** @class */ (function () {
    function OffClickDirective(elementRef) {
        this.elementRef = elementRef;
        this.offClick = new EventEmitter();
    }
    OffClickDirective.prototype.ngOnInit = function () {
        var _this = this;
        this.eventHandler = function ($event) {
            $event.stopPropagation();
            if (!_this.elementRef.nativeElement.contains($event.target)) {
                _this.offClick.emit(null);
            }
        };
        document.addEventListener('mouseup', this.eventHandler);
    };
    OffClickDirective.prototype.ngOnDestroy = function () {
        document.removeEventListener('mouseup', this.eventHandler);
    };
    OffClickDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[offClick]'
                },] },
    ];
    /** @nocollapse */
    OffClickDirective.ctorParameters = function () { return [
        { type: ElementRef, },
    ]; };
    OffClickDirective.propDecorators = {
        'offClick': [{ type: Output },],
    };
    return OffClickDirective;
}());
export { OffClickDirective };
//# sourceMappingURL=offclick.directive.js.map